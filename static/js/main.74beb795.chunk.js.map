{"version":3,"sources":["api.js","utils.js","DependencyTable.jsx","QueryTypeButtonGroup.js","App.js","index.js"],"names":["BASE_URLS","getNpmPayload","pkg","version","post","apiCfg","url","dest","axios","method","data","payload","pkgName","then","response","catch","getIntVersion","test","parseFloat","slice","columns","field","headerName","width","DependencyTable","props","dependencyData","devDependencyData","dependencyType","useState","pageNum","setPageNum","rowData","stateRowData","setStateRowData","useEffect","recordsRange","pageRecords","length","pkgs","postsArr","packageName","push","current","Promise","all","allProms","npmData","npmPackageData","auditData","_","find","vulnerableData","metadata","vulnerabilities","moderate","high","critical","vulnerable","latest","collected","outdated","style","height","rows","pageSize","onPageChange","pageNumObj","page","queryTypes","getDependencies","value","callback","location","repoLocation","get","rsp","processedDependencies","processedDevDependencies","dependencies","devDependencies","key","element","id","QueryTypeButtonGroup","defaultUrl","React","queryType","setQueryType","urlValue","setUrlValue","idValue","setIdValue","setDependencyType","className","FormControlLabel","control","ToggleButtonGroup","exclusive","onChange","event","newAlignment","aria-label","size","ToggleButton","label","labelPlacement","evt","setDependency","Autocomplete","options","concat","getOptionLabel","option","title","renderInput","params","TextField","variant","defaultValue","helperText","target","Button","color","onClick","setDependencies","App","setDependencyData","setDevDependencyData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74beb795.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst BASE_URLS = {\n    GIT: 'https://raw.githubusercontent.com',\n    NPM_AUDIT: 'https://registry.npmjs.org/-/npm/v1/security/audits',\n    NPM: 'https://api.npms.io/v2/package/mget'\n};\n\nconst getNpmPayload = (pkg, version) => {\n    return {\n        \"name\": \"npm_audit_test\",\n        \"version\": \"1.0.0\",\n        [pkg]: {\n            \"react\": version\n        },\n        \"dependencies\": {\n            [pkg]: {\n                \"version\": version\n            }\n        }\n    }\n};\n\nfunction get(apiCfg) {\n    const url = apiCfg.location === 'git' ? `${BASE_URLS.GIT}/${apiCfg.repoLocation}/master/package.json` : `${BASE_URLS.NPM}/master/package.json`\n    axios({\n        method: 'get',\n        url: url,\n      })\n        .then((response) => {\n            apiCfg.callback(response)\n        });\n}\n\nfunction post(apiCfg) {\n    const url = apiCfg.dest === 'npm' ? BASE_URLS.NPM : BASE_URLS.NPM_AUDIT;\n    return axios({\n        method: 'post',\n        url: url,\n        data: apiCfg.payload,\n        pkgName: apiCfg.pkgName\n      })\n        .then((response) => {\n            return response;\n        }).catch((response) => {\n            return {[apiCfg.pkgName]: response};\n        });\n}\n\nexport {get, post, getNpmPayload};","function getIntVersion(version) {\n    if (!/^[A-Za-z0-9]/.test(version)) {\n        return parseFloat(version.slice(1));\n    }\n    return parseFloat(version);\n}\n\nexport {getIntVersion};","import React, {useState, useEffect} from \"react\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport {post, getNpmPayload} from 'api';\nimport {getIntVersion} from 'utils';\nimport _ from 'lodash';\n\nconst columns = [\n  { field: 'packageName', headerName: 'Package name', width: 400 },\n  { field: 'current', headerName: 'Current'},\n  { field: 'latest', headerName: 'Latest'},\n  { field: 'outdated', headerName: 'Outdated' },\n  { field: 'vulnerable', headerName: 'Vulnerable', width: 400 },\n];\n\nfunction DependencyTable(props) {\n  const {dependencyData = [], devDependencyData = [], dependencyType} = props;\n  const [pageNum, setPageNum] = useState(1);\n  const rowData = dependencyType === 'dependencies' ? dependencyData : devDependencyData;\n  const [stateRowData, setStateRowData] = useState(rowData);\n\n  useEffect(() => {\n    const pageSize = 10;\n    const recordsRange = pageNum * pageSize;\n    const pageRecords = rowData.slice(recordsRange - pageSize, recordsRange);\n    if (pageRecords && pageRecords.length) {\n      let pkgs = [];\n      let postsArr = [];\n\n      for (const pkg of pageRecords) {\n        const pkgName = pkg.packageName;\n        pkgs.push(pkgName);\n        postsArr.push(post({payload: getNpmPayload(pkgName, pkg.current), pkgName: pkgName}))\n      }\n      postsArr.push(post({payload: pkgs, dest: 'npm'}));\n      Promise.all(postsArr).then((allProms) => {\n        let npmData = allProms[allProms.length - 1].data;\n\n        for (const pkg of rowData) {\n          const pkgName = pkg.packageName;\n          const npmPackageData = npmData[pkgName];\n          const auditData = _.find(allProms, pkgName);\n          const vulnerableData = auditData && auditData[pkgName].data && auditData[pkgName].data.metadata && auditData[pkgName].data.metadata.vulnerabilities;\n          if (vulnerableData && (vulnerableData.moderate || vulnerableData.high || vulnerableData.critical)) {\n            pkg.vulnerable = 'Yes';\n          } else {\n            pkg.vulnerable = 'Not Available';\n          }\n\n          if (npmPackageData) {\n            pkg.latest = npmPackageData.collected.metadata.version;\n            getIntVersion(pkg.latest) > getIntVersion(pkg.current) ? pkg.outdated = 'True' : pkg.outdated = 'False';\n          }\n        }\n      });\n    } \n    setStateRowData(rowData);\n  }, [rowData, pageNum, stateRowData, dependencyData]);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={stateRowData} \n          columns={columns} \n          pageSize={10} \n          onPageChange = {(pageNumObj) => setPageNum(pageNumObj.page)}\n        />\n    </div>\n  );\n}\n\nexport { DependencyTable };\n","import React from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {get} from 'api';\n\nconst queryTypes = {\n    URL: 'url',\n    ID_RANGE: 'idRange',\n};\n\n\nconst getDependencies = (value, callback) => {\n    get({repoLocation: value, location: 'git', callback: (rsp) => {\n      let processedDependencies = [];\n      let processedDevDependencies = [];\n      let dependencies = rsp.data.dependencies;\n      let devDependencies = rsp && rsp.data.devDependencies;\n  \n      for (const key in devDependencies) {\n        if (devDependencies[key]) {\n          const element = devDependencies[key];\n          processedDevDependencies.push({\n            id: key,\n            packageName: key,\n            current: element,\n          })\n        }\n      }\n\n      for (const key in dependencies) {\n        if (dependencies[key]) {\n          const element = dependencies[key];\n          processedDependencies.push({\n            id: key,\n            packageName: key,\n            current: element,\n          })\n        }\n      }\n      callback({dependencies: processedDependencies, devDependencies: processedDevDependencies});\n    }});\n  };\n\nfunction QueryTypeButtonGroup(props) {\n    const defaultUrl = 'facebook/react';\n    const [queryType, setQueryType] = React.useState('url');\n    const [urlValue, setUrlValue] = React.useState(defaultUrl);\n    const [idValue, setIdValue] = React.useState('');\n    const [dependencyType, setDependencyType] = React.useState('devDependencies');\n    const {dependencyData, devDependencyData} = props;\n    const handleAlignment = (event, newAlignment) => {\n        setQueryType(newAlignment);\n    };\n\n    const getData = () => {\n        queryType === queryTypes.URL ? getDependencies(urlValue, props.setDependencies) : getDependencies(idValue, props.setDependencies);\n    }\n\n    const setDependency = (value) => {\n        setDependencyType(value);\n        props.setDependencyType(value);\n    }\n    return ( \n    <div className='query-fields'>\n        <FormControlLabel\n        value=\"url\"\n        control={<ToggleButtonGroup\n                value={queryType}\n                exclusive\n                onChange={handleAlignment}\n                className='query-field'\n                aria-label=\"text alignment\"\n                size='small'>\n                <ToggleButton value=\"url\" aria-label=\"left aligned\">\n                    <text>URL</text>\n                </ToggleButton>\n                <ToggleButton value=\"idRange\" aria-label=\"centered\">\n                    <text>ID Range</text>\n                </ToggleButton>\n            </ToggleButtonGroup>}\n        label=\"Query Type:\"\n        labelPlacement=\"Start\"/>\n        <FormControlLabel\n            value=\"devDependencies\"\n            control={<ToggleButtonGroup\n                    value={dependencyType}\n                    exclusive\n                    onChange={(evt, value) => setDependency(value)}\n                    className='query-field'\n                    aria-label=\"text alignment\"\n                    size='small'>\n                    <ToggleButton value=\"devDependencies\" aria-label=\"left aligned\">\n                        <text>Dev Dependencies</text>\n                    </ToggleButton>\n                    <ToggleButton value=\"dependencies\" aria-label=\"centered\">\n                        <text>Dependencies</text>\n                    </ToggleButton>\n                </ToggleButtonGroup>}\n            label=\"Query Type:\"\n            labelPlacement=\"Start\"\n        />\n        <div className='query-fields'>\n            {queryType === queryTypes.ID_RANGE && <Autocomplete\n                id=\"combo-box-demo\"\n                className='query-field'\n                options={dependencyData.concat(devDependencyData)}\n                getOptionLabel={(option) => option.title}\n                style={{ width: 300 }}\n                onChange={(value) => setIdValue(value)}\n                renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n            />}\n            {queryType === queryTypes.URL && <TextField\n                id=\"filled-helperText\"\n                label=\"URL\"\n                className='query-field'\n                defaultValue={defaultUrl}\n                helperText=\"Eg: {org}/{repo}\"\n                variant=\"filled\"\n                onChange={(evt) => {\n                    setUrlValue(evt.target.value);\n                }}\n            />}\n            <Button variant=\"contained\" color=\"primary\" className='query-field' onClick={() => getData()}>\n                Submit\n            </Button>\n        </div>\n        \n    </div>\n    )\n}\n\nexport {QueryTypeButtonGroup};","import React, {useMemo} from 'react';\nimport {DependencyTable} from 'DependencyTable';\nimport {QueryTypeButtonGroup} from 'QueryTypeButtonGroup';\nimport './App.css';\n\nfunction App() {\n  const [dependencyData, setDependencyData] = React.useState([]);\n  const [devDependencyData, setDevDependencyData] = React.useState([]);\n  const [dependencyType, setDependencyType] = React.useState('devDependencies');\n  \n  const setDependencies = ({dependencies = [], devDependencies = []}) => {\n    setDependencyData(dependencies);\n    setDevDependencyData(devDependencies);\n  }\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h4>Dependency Checker</h4>\n      </header>\n      <div className='App-components'>\n        <QueryTypeButtonGroup dependencyData={dependencyData} devDependencyData={devDependencyData} setDependencies={setDependencies} setDependencyType={setDependencyType}/>\n        <DependencyTable dependencyData={dependencyData} devDependencyData={devDependencyData} dependencyType={dependencyType}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}